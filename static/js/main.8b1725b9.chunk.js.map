{"version":3,"sources":["redux/charts/fetchChartData.js","redux/charts/vehicleDataReducer.js","redux/charts/vehicleDetailsReducer.js","redux/rootReducer.js","redux/store.js","components/CarsChart/CarsChart.js","components/Timestamp/Timestamp.js","components/VehicleDetails/VehicleDetails.js","components/redux/VehicleDetailsRedux/VehicleDetailsRedux.js","components/redux/MileagePage/MileagePage.js","index.js"],"names":["CHARTS_FETCH_CHART_DATA_BEGIN","CHARTS_FETCH_CHART_DATA_SUCCESS","CHARTS_FETCH_CHART_DATA_FAILURE","CHARTS_FETCH_CHART_DATA_DISMISS_ERROR","fetchChartData","dispatch","type","fetch","then","response","json","data","_fetchChartDataSuccess","catch","error","dismissFetchChartDataError","initialState","fetchChartDataPending","fetchChartDataError","reducer","state","action","series","avg_series","car_details","max_year","min_year","timestamp","SHOW_CAR_DETAILS","vehicleIndex","showCarDetails","index","combineReducers","mileagePage","fetchVehicleData","vehicleData","vehicleDetails","middleware","thunk","logger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","initState","CarsChart","props","_chartCarClick","bind","this","chartData","name","options","chart","events","dataPointSelection","height","toolbar","tools","download","zoom","enabled","zoomedArea","fill","color","opacity","stroke","width","noData","text","theme","palette","xaxis","tickAmount","max_age","min","max","tickPlacement","labels","formatter","xAxisLabelFormatter","yaxis","title","tooltip","markers","size","legend","show","className","event","chartContext","config","onCarClick","dataPointIndex","value","d","result","Math","ceil","PureComponent","Timestamp","ts_part","unix","fromNow","locale","VehicleDetails","imported_str","car","undefined","imported","Container","Row","Col","xs","span","xl","offset","Card","Header","as","Button","variant","href","link","Img","src","image","Body","Text","Table","key","id","make","model","price","year","mileage","location","connect","console","log","MileagePage","VehicleDetailsRedux","Component","bindActionCreators","actions","store","createStore","rootReducer","applyMiddleware","configureStore","render","document","querySelector"],"mappings":"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","file":"static/js/main.8b1725b9.chunk.js","sourcesContent":["export const CHARTS_FETCH_CHART_DATA_BEGIN = 'CHARTS_FETCH_CHART_DATA_BEGIN';\nexport const CHARTS_FETCH_CHART_DATA_SUCCESS = 'CHARTS_FETCH_CHART_DATA_SUCCESS';\nexport const CHARTS_FETCH_CHART_DATA_FAILURE = 'CHARTS_FETCH_CHART_DATA_FAILURE';\nexport const CHARTS_FETCH_CHART_DATA_DISMISS_ERROR = 'CHARTS_FETCH_CHART_DATA_DISMISS_ERROR';\n\nfunction _fetchChartDataSuccess(response) {\n    return {\n        type: CHARTS_FETCH_CHART_DATA_SUCCESS,\n        data: response,\n    }\n}\n\nfunction _fetchChartDataFailure(err) {\n    return {\n        type: CHARTS_FETCH_CHART_DATA_FAILURE,\n        data: {error: err},\n    }\n}\n\n// Rekit uses redux-thunk for async actions by default: https://github.com/gaearon/redux-thunk\n// If you prefer redux-saga, you can use rekit-plugin-redux-saga: https://github.com/supnate/rekit-plugin-redux-saga\nexport function fetchChartData() {\n    return (dispatch) => { // optionally you can have getState as the second argument\n        dispatch({\n            type: CHARTS_FETCH_CHART_DATA_BEGIN,\n        });\n\n        fetch('https://carscanner.github.io/carscanner-data/export.json')\n            .then(response => response.json())\n            .then(response => {\n                dispatch(_fetchChartDataSuccess(response))\n            })\n            .catch(error => {\n                dispatch(_fetchChartDataFailure(error))\n            });\n    }\n}\n\n// Async action saves request error by default, this method is used to dismiss the error info.\n// If you don't want errors to be saved in Redux store, just ignore this method.\nexport function dismissFetchChartDataError() {\n    return {\n        type: CHARTS_FETCH_CHART_DATA_DISMISS_ERROR,\n    };\n}\n\nconst initialState = {\n    fetchChartDataPending: false,\n    fetchChartDataError: null,\n};\n\nexport function reducer(state = initialState, action) {\n    switch (action.type) {\n        case CHARTS_FETCH_CHART_DATA_BEGIN:\n            // Just after a request is sent\n            return {\n                ...state,\n                fetchChartDataPending: true,\n                fetchChartDataError: null,\n            };\n\n        case CHARTS_FETCH_CHART_DATA_SUCCESS:\n            // The request is success\n            return {\n                ...state,\n                fetchChartDataPending: false,\n                fetchChartDataError: null,\n            };\n\n        case CHARTS_FETCH_CHART_DATA_FAILURE:\n            // The request is failed\n            return {\n                ...state,\n                fetchChartDataPending: false,\n                fetchChartDataError: action.data.error,\n            };\n\n        case CHARTS_FETCH_CHART_DATA_DISMISS_ERROR:\n            // Dismiss the request failure error\n            return {\n                ...state,\n                fetchChartDataError: null,\n            };\n\n        default:\n            return state;\n    }\n}\n","import {CHARTS_FETCH_CHART_DATA_FAILURE, CHARTS_FETCH_CHART_DATA_SUCCESS} from \"./fetchChartData\";\n\n\nconst initialState = {\n    series: [],\n    avg_series: [],\n    car_details: [],\n    max_year: null,\n    min_year: null,\n    timestamp: null,\n};\n\nexport function reducer(state = initialState, action) {\n    switch (action.type) {\n        case CHARTS_FETCH_CHART_DATA_SUCCESS:\n            return {\n                ...state,\n                ...action.data.data,\n            };\n        case CHARTS_FETCH_CHART_DATA_FAILURE:\n            return {\n                ...state,\n                ...initialState\n            };\n        default:\n            return state;\n    }\n}\n","export const SHOW_CAR_DETAILS = 'show_car_details';\n\nconst initialState = {\n    vehicleIndex: null,\n};\n\nexport function reducer(state = initialState, action) {\n    switch (action.type) {\n        case SHOW_CAR_DETAILS:\n            return {\n                ...state,\n                vehicleIndex: action.data.vehicleIndex,\n            };\n        default:\n            return state;\n    }\n}\n\nexport function showCarDetails(index = null) {\n    return {\n        type: SHOW_CAR_DETAILS,\n        data: {\n            vehicleIndex: index,\n        }\n    };\n}\n","import {combineReducers} from 'redux';\nimport {reducer as fetchVehicleData} from \"./charts/fetchChartData\";\nimport {reducer as vehicleData} from './charts/vehicleDataReducer';\nimport {reducer as vehicleDetails} from './charts/vehicleDetailsReducer'\n\nexport default combineReducers({\n    mileagePage: combineReducers({\n        fetchVehicleData,\n        vehicleData,\n        vehicleDetails,\n    }),\n});\n","import {createStore, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from \"./rootReducer\";\nimport logger from 'redux-logger'\n\nconst middleware = [\n    thunk,\n    logger,\n];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// state tree design: single source of trueth - this is how the state should look like\n/*\n_stateTree = {\n    mileagePage: {\n        fetchVehicleData: {\n            fetchChartDataPending: bool,\n            fetchChartDataError: bool,\n        },\n        vehicleData: { // remote data in the remote format\n            series: array,\n            avg_series: array,\n            car_details: array,\n            max_year: int,\n            min_year: int,\n            timestamp: int,\n        },\n        vehicleDetails:{\n            vehicleIndex: int, // from model.dataPointIndex, index in mileagePage.vehicleData.car_details\n        },\n    },\n}\n*/\n\nconst initState = {\n\n};\n\nexport default function configureStore(initialState = initState) {\n    return createStore(rootReducer, initialState, composeEnhancers(\n        applyMiddleware(...middleware),\n    ));\n}\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'react-apexcharts'\n\nexport default class CarsChart extends PureComponent {\n    static propTypes = {\n        chartData: PropTypes.object,\n        onCarClick: PropTypes.func,\n    };\n\n    constructor(props) {\n        super(props);\n        this._chartCarClick = this._chartCarClick.bind(this);\n    }\n\n    render() {\n        let series = [\n            {\n                data: this.props.chartData.series,\n                name: 'Pojazdy',\n                type: 'scatter',\n            },\n            {\n                data: this.props.chartData.avg_series,\n                name: 'Średni',\n                type: 'line'\n            },\n        ];\n\n        let options = {\n            chart: {\n                events: {\n                    dataPointSelection: this._chartCarClick,\n                },\n                height: 600,\n                toolbar: {\n                    tools: {\n                        download: false,\n                    }\n                },\n                zoom: {\n                    enabled: true,\n                    type: 'xy',\n                    zoomedArea: {\n                        fill: {\n                            color: '#90CAF9',\n                            opacity: 0.4\n                        },\n                        stroke: {\n                            color: '#0D47A1',\n                            opacity: 0.4,\n                            width: 1\n                        }\n                    }\n                },\n            },\n            noData: {\n                text: 'Brak danych',\n            },\n            theme: {\n                palette: 'palette6',\n            },\n            xaxis: {\n                tickAmount: this.props.chartData.max_age,\n                min: 0,\n                max: this.props.chartData.max_age,\n                tickPlacement: 'on',\n                labels: {\n                    formatter: this.xAxisLabelFormatter.bind(this),\n                },\n            },\n            yaxis: {\n                min: 0,\n                title: {\n                    text: 'Przebieg',\n                },\n            },\n            tooltip: {\n                // custom: this.displayTooltip.bind(this),\n                enabled: false,\n                // shared: false,\n                // intersect: true,\n            },\n            fill: {\n                type: 'solid',\n            },\n            markers: {\n                size: [6, 0]\n            },\n            legend: {\n                show: true\n            },\n        };\n\n        return (\n            <div className=\"charts-cars-chart\">\n                <Chart options={options} series={series} type=\"line\" width={800} height={600}/>\n            </div>\n        );\n    }\n\n    _chartCarClick(event, chartContext, config) {\n        this.props.onCarClick(config.dataPointIndex);\n    }\n\n    xAxisLabelFormatter(value, timestamp, index) {\n        const d = this.props.chartData;\n        const result = d.min_year + d.max_age - value;\n        return result === Math.ceil(result) ? result : '';\n    }\n}\n\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from \"react-moment\";\nimport 'moment/locale/pl';\n\nimport './Timestamp.scss'\n\nexport default class Timestamp extends PureComponent {\n    static propTypes = {\n        timestamp: PropTypes.number\n    };\n\n    render() {\n        let ts_part = this.props.timestamp ?\n            <Moment unix={true} fromNow locale='pl'>{this.props.timestamp}</Moment> : \"Brak danych\";\n        return <div className=\"charts-timestamp\">\n            Ostatnia aktualizacja: {ts_part}\n        </div>\n    }\n}\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport './VehicleDetails.scss'\nimport Table from 'react-bootstrap/Table'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nexport default class VehicleDetails extends PureComponent {\n    static propTypes = {\n        car: PropTypes.object,\n    };\n\n    render() {\n        let car = this.props.car;\n        if (car === null || car === undefined) {\n            return (<div className=\"vehicle-details\">Brak danych</div>);\n        }\n\n        let imported_str;\n        let imported = car.imported;\n        if (imported === null)\n            imported_str = 'Brak danych';\n        else if (imported)\n            imported_str = 'Tak';\n        else\n            imported_str = 'Nie';\n\n        // const map_uri = 'https://www.google.com/maps/search/?api=1&query=' + escape(car.location);\n\n        return (\n            <Container>\n                <Row>\n                    <Col xs={{span: 0}}/>\n                    <Col className=\"justify-content-md-center\" xs={{span: 12}} xl={{span: 6, offset: 3}}>\n                        <Card>\n                            <Card.Header as='h5'>\n                                <Container>\n                                    <Row>\n                                        <Col >\n                                            {car.name}\n                                        </Col>\n                                        <Col xs='auto'>\n                                            <Button variant=\"primary\" href={car.link} size='sm'>Allegro</Button>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Card.Header>\n                            <Card.Img variant=\"top\" src={car.image}/>\n                            <Card.Body>\n                                <Card.Text>\n                                    <Table size='sm'>\n                                        <tr key='make' id='make'>\n                                            <td key='key'>Marka</td>\n                                            <td key='value'>{car.make}</td>\n                                        </tr>\n                                        <tr key='model' id='model'>\n                                            <td key='key'>Model</td>\n                                            <td key='value'>{car.model}</td>\n                                        </tr>\n                                        <tr key='price' id='price'>\n                                            <td key='key'>Cena</td>\n                                            <td key='value'>{car.price}</td>\n                                        </tr>\n                                        <tr key='year'>\n                                            <td key='key'>Rocznik</td>\n                                            <td key='value'>{car.year}</td>\n                                        </tr>\n                                        <tr key='mileage'>\n                                            <td key='key'>Przebieg</td>\n                                            <td key='value'>{car.mileage}</td>\n                                        </tr>\n                                        <tr key='location'>\n                                            <td key='key'>Localizacja</td>\n                                            <td key='value'>\n                                                {/*<ahref={map_uri}>*/car.location/*</a>*/}\n                                            </td>\n                                        </tr>\n                                        <tr key='imported'>\n                                            <td key='key'>Importowany</td>\n                                            <td key='value'>{imported_str}</td>\n                                        </tr>\n                                    </Table>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n","import {connect} from \"react-redux\";\nimport VehicleDetails from \"../../VehicleDetails/VehicleDetails\"\n\nfunction mapStateToProps(state) {\n    console.log('vehicle details redux map state to props:', state);\n    const index = state.mileagePage.vehicleDetails.vehicleIndex;\n    let vehicleDetails;\n    if (index == null)\n        vehicleDetails = null;\n    else\n        vehicleDetails = state.mileagePage.vehicleData.car_details[index];\n\n    return {\n        car: vehicleDetails,\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {}\n)(VehicleDetails);\n","import React, {Component} from 'react';\nimport {PropTypes} from 'prop-types';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport * as actions from '../../../redux/charts/fetchChartData';\nimport {showCarDetails} from '../../../redux/charts/vehicleDetailsReducer'\nimport CarsChart from '../../CarsChart/CarsChart';\nimport Timestamp from '../../Timestamp/Timestamp'\n\nimport './MileagePage.scss'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport VehicleDetailsRedux from \"../VehicleDetailsRedux/VehicleDetailsRedux\";\n\nexport class MileagePage extends Component {\n    static propTypes = {\n        chartData: PropTypes.object.isRequired,\n        showCarDetails: PropTypes.func,\n    };\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"charts-mileage-page\">\n                        <CarsChart chartData={this.props.chartData}\n                                   onCarClick={this.props.showCarDetails}/>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <VehicleDetailsRedux/>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <Timestamp timestamp={this.props.chartData.timestamp}/>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n    componentDidMount() {\n        this.props.fetchChartData()\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        chartData: state.mileagePage.vehicleData,\n    };\n}\n\n/* istanbul ignore next */\nfunction mapDispatchToProps(dispatch) {\n    return {\n        ...bindActionCreators({...actions, showCarDetails}, dispatch)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MileagePage);\n","import 'bootstrap/dist/css/bootstrap.css';\n\nimport React from 'react';\nimport {render} from 'react-dom';\nimport configureStore from './redux/store'\nimport {Provider} from \"react-redux\";\nimport MileagePage from \"./components/redux/MileagePage/MileagePage\";\n\nimport './index.scss'\n\nconst store = configureStore();\n\nrender(\n    <Provider store={store}>\n        <MileagePage/>\n    </Provider>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}